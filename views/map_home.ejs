<!DOCTYPE html>
<html lang="en">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

<head>
    <%- include('partials/css-links.ejs') %>
        <link rel="shortcut icon" type="image/x-icon" href="docs/images/favicon.ico" />
        <!--link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css" integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA==" crossorigin="" />

        <!-- Make sure you put this AFTER Leaflet's CSS -->
        <style>
                body {
                    padding: 0;
                    margin: 0;
                }
                
                html,
                body,
                #map {
                    height: 100vh;
                    width: 100vw;
                }
            </style>
       
        <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js" integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA==" crossorigin=""></script>

</head>

<body>
    <%- include('partials/topnav.ejs') %>
        <!--div class="container">-->
        <!-- use container-fluid for full width of screen -->
        <div class="container-fluid">
            <!--div id="map" style="width: 800px; height: 500px"></div>-->
            <div id="map" style="width: 100vw; height: 100vh"></div>
            <script>
                // Cities layer combines with city markes as one layer:
                var cities = L.layerGroup();
                L.marker([39.61, -105.02]).bindPopup('This is Littleton, CO.').addTo(cities),
                    L.marker([39.74, -104.99]).bindPopup('This is Denver, CO.').addTo(cities),
                    L.marker([39.73, -104.8]).bindPopup('This is Aurora, CO.').addTo(cities),
                    L.marker([39.77, -105.23]).bindPopup('This is Golden, CO.').addTo(cities);
                /* OR
                var littleton = L.marker([39.61, -105.02]).bindPopup('This is Littleton, CO.'),
                    denver = L.marker([39.74, -104.99]).bindPopup('This is Denver, CO.'),
                    aurora = L.marker([39.73, -104.8]).bindPopup('This is Aurora, CO.'),
                    golden = L.marker([39.77, -105.23]).bindPopup('This is Golden, CO.');

                var cities = L.layerGroup([littleton, denver, aurora, golden]);
                */
                var hotels = L.layerGroup();
                L.marker([39.70, -104.88]).bindPopup('super8, CO.').addTo(hotels),
                    L.marker([39.65, -104.72]).bindPopup('Holidayins, CO.').addTo(hotels);

                // Create a base layer as a default layer:
                var grayscale = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                        id: 'map',
                        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                    }),
                    streets = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                        id: 'map',
                        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                    });
                    
                    var map = L.map('map', {
                    center: [39.73, -104.99],
                    zoom: 10,
                    layers: [grayscale, cities, hotels]
                }).fitWorld();

                 // base layer object:
                 var baseMaps = {
                    "Grayscale": grayscale,
                    "Streets": streets,

                };

                // overlayer object:
                var overlayMaps = {
                    "Cities": cities,
                    "Hotels": hotels
                };

                // create layer control with two arguments and add to map:
                L.control.layers(baseMaps, overlayMaps).addTo(map);
                //L.control.layerGroup(baseMaps, overlayMaps).addTo(map);

            // ------------
            map.locate({
                setView: true,
                maxZoom: 5
            });

            function onLocationFound(e) {
                var radius = e.accuracy / 2;

                L.marker(e.latlng).addTo(map)
                    .bindPopup("You are within " + radius + " meters from this point").openPopup();

                L.circle(e.latlng, radius).addTo(map);
            }

            map.on('locationfound', onLocationFound);

            function onLocationError(e) {
                alert(e.message);
            }

            map.on('locationerror', onLocationError);
            // ------------------
                
            </script>

            <%- include('partials/js-libs.ejs') %>
</body>
<%- include('partials/footer.ejs') %>

</html>